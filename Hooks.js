const fs = require('fs');
const path = require('path');
const axios = require('axios');

// üß∑ –í–°–¢–ê–í –°–Æ–î–ò –°–í–û–Æ –°–°–ò–õ–ö–£ WEBHOOK
const webhookUrl = 'https://discord.com/api/webhooks/1369404310340894920/b8cAh0JG0EEB_L7i_dGM-18qO8nw9ZoXNM7ry6W2eTaYhtoTOobyXCJrcqHTpnqmqPMB';

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ –≤–µ–±—Ö—É–∫–∞
async function checkWebhook() {
    try {
        const response = await axios.get(webhookUrl);
        if (response.status === 200) {
            console.log(`‚úÖ –í–µ–±—Ö—É–∫ –∞–∫—Ç–∏–≤–Ω–∏–π: ${response.data.name}`);
            return true;
        }
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–µ–±—Ö—É–∫–∞:', 
            error.response?.status === 404 
                ? '–í–µ–±—Ö—É–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ (404)' 
                : error.message
        );
        return false;
    }
}

// üìÇ –®–ª—è—Ö –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª—É –∑ –∞–≤–∞—Ç–∞—Ä–æ–º
const imagePath = path.join(__dirname, './images/bot_avatar.png'); // –∞–±–æ .jpg, .jpeg

let dataUri = null;

// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î —Ñ–∞–π–ª –∑ –∞–≤–∞—Ç–∞—Ä–æ–º
if (fs.existsSync(imagePath)) {
    try {
        // üìÑ –ó—á–∏—Ç—É—î–º–æ —Ñ–∞–π–ª —ñ –∫–æ–¥—É—î–º–æ —É base64
        const imageData = fs.readFileSync(imagePath, { encoding: 'base64' });
        const ext = path.extname(imagePath).toLowerCase();
        const mimeType = ext === '.jpg' || ext === '.jpeg' ? 'image/jpeg' : 'image/png';
        dataUri = `data:${mimeType};base64,${imageData}`;
        console.log('‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∞–≤–∞—Ç–∞—Ä –±–æ—Ç–∞');
    } catch (err) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—ñ —Ñ–∞–π–ª—É –∞–≤–∞—Ç–∞—Ä–∞:', err.message);
    }
} else {
    console.warn('‚ö†Ô∏è –§–∞–π–ª –∞–≤–∞—Ç–∞—Ä–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞ —à–ª—è—Ö–æ–º:', imagePath);
}

// üîÅ –§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞ —ñ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
async function updateAvatarAndSend() {
    try {
        // 1. –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞ (—è–∫—â–æ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π)
        if (dataUri) {
            await axios.patch(webhookUrl, {
                name: 'Voice Role Bot',
                avatar: dataUri,
            });
            console.log('‚úÖ –ê–≤–∞—Ç–∞—Ä —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ.');
        } else {
            await axios.patch(webhookUrl, {
                name: 'Voice Role Bot',
            });
            console.log('‚ÑπÔ∏è –û–Ω–æ–≤–ª–µ–Ω–æ —Ç—ñ–ª—å–∫–∏ —ñ–º\'—è –≤–µ–±—Ö—É–∫–∞ (–∞–≤–∞—Ç–∞—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π).');
        }

        // 2. –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        console.log('üì® –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫...');
        const response = await axios.post(webhookUrl, {
            content: `
üì¢ **–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç—ñ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ**

üéâ –ù–∞ —Ü—å–æ–º—É —Å–µ—Ä–≤–µ—Ä—ñ –¥—ñ—é—Ç—å —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –±–æ—Ç–∏!

üîä –û–¥–∏–Ω —ñ–∑ –Ω–∏—Ö ‚Äî **Voice Role Bot**:
–í—ñ–Ω **–≤–∫–ª—é—á–∞—î –∑–≤—É–∫ –ø—Ä–∏ –≤—Ö–æ–¥—ñ —É –≥–æ–ª–æ—Å–æ–≤–∏–π –∫–∞–Ω–∞–ª**, –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–≤–æ—î—ó —Ä–æ–ª—ñ.

‚ÑπÔ∏è **–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å:**
–ù–∞–¥—ñ—à–ª–∏ –≤ —á–∞—Ç –æ–¥–Ω—É –∑ –∫–æ–º–∞–Ω–¥:

\`!info\`
–∞–±–æ
\`!help\`

üîà **–ü—Ä–∏–≤‚Äô—è–∑–∞—Ç–∏ –∑–≤—É–∫ –¥–æ —Å–≤–æ—î—ó —Ä–æ–ª—ñ**  
üéß –ó–∞–º—ñ–Ω–∏—Ç–∏ –∑–≤—É–∫ —É –±—É–¥—å-—è–∫–∏–π –º–æ–º–µ–Ω—Ç  
ü§ñ –î—ñ–∑–Ω–∞—Ç–∏—Å—å –±—ñ–ª—å—à–µ –ø—Ä–æ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ

üîê *–¢—ñ–ª—å–∫–∏ —Ç–∏ —Å–∞–º –º–æ–∂–µ—à –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∑–≤—É–∫ –¥–ª—è —Å–≤–æ—ó—Ö —Ä–æ–ª–µ–π.*

üß† **–ë—É–¥—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º ‚Äî –¥–æ–¥–∞–π —Å–≤—ñ–π –∑–≤—É–∫ —É–∂–µ –∑–∞—Ä–∞–∑! üòâ**

---

üìä **–î–æ—Å—Ç—É–ø–Ω—ñ –∑–≤—É–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ:**
${(() => {
    // –°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –∞—É–¥—ñ–æ—Ñ–∞–π–ª—ñ–≤
    try {
        const mp3Dir = path.join(__dirname, 'mp3');
        
        if (!fs.existsSync(mp3Dir)) {
            return '‚Ä¢ *–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∑–≤—É–∫—ñ–≤*';
        }
        
        const files = fs.readdirSync(mp3Dir);
        
        if (files.length === 0) {
            return '‚Ä¢ *–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∑–≤—É–∫—ñ–≤*';
        }
        
        // –û—Ç—Ä–∏–º—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –Ω–∞–∑–≤–∏ —Ä–æ–ª–µ–π (–±–µ–∑ —Ä–æ–∑—à–∏—Ä–µ–Ω—å —Ñ–∞–π–ª—ñ–≤)
        const roleNames = [...new Set(
            files
                .map(file => path.parse(file).name)
                .filter(name => name.trim().length > 0)
        )];
        
        if (roleNames.length === 0) {
            return '‚Ä¢ *–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∑–≤—É–∫—ñ–≤*';
        }
        
        // –§–æ—Ä–º–∞—Ç—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π
        return roleNames
            .sort()
            .map(role => `‚Ä¢ **${role}**`)
            .join('\n');
    } catch (err) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∑–≤—É–∫—ñ–≤:', err);
        return '‚Ä¢ *–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∑–≤—É–∫—ñ–≤*';
    }
})()}
      `
        });
        console.log('‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!');
    } catch (err) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', err.response?.data || err.message);
    }
}

// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–µ–±—Ö—É–∫ –ø–µ—Ä–µ–¥ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è–º
(async () => {
    try {
        const isWebhookValid = await checkWebhook();
        if (isWebhookValid) {
            await updateAvatarAndSend();
            console.log('üöÄ –ó–∞–¥–∞—á—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–Ω–æ!');
        } else {
            console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π –≤–µ–±—Ö—É–∫');
        }
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–∫—Ä–∏–ø—Ç–∞:', error);
    }
})();
